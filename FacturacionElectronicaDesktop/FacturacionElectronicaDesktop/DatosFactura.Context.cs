//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FacturacionElectronicaDesktop
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactronLCTEntities : DbContext
    {
        public FactronLCTEntities()
            : base("name=FactronLCTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<CuentaBancaria> CuentaBancaria { get; set; }
        public virtual DbSet<DetalleFactura> DetalleFactura { get; set; }
        public virtual DbSet<Documento> Documento { get; set; }
        public virtual DbSet<FacturacionElectronica> FacturacionElectronica { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Tipo_DocumentoElectronico> Tipo_DocumentoElectronico { get; set; }
        public virtual DbSet<Tipo_igv> Tipo_igv { get; set; }
        public virtual DbSet<Tipo_NotaCredito> Tipo_NotaCredito { get; set; }
        public virtual DbSet<Tipo_NotaDebito> Tipo_NotaDebito { get; set; }
        public virtual DbSet<Tipo_Operacion> Tipo_Operacion { get; set; }
        public virtual DbSet<TipoCuentaBancaria> TipoCuentaBancaria { get; set; }
        public virtual DbSet<Unidad_Medida> Unidad_Medida { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<ResumenBoleta> ResumenBoleta { get; set; }
    
        public virtual int ActualizarCliente(string cod_doc, string raz_soc, string dir, string email, string tel_mov, string tel_fijo, string num_ruc)
        {
            var cod_docParameter = cod_doc != null ?
                new ObjectParameter("cod_doc", cod_doc) :
                new ObjectParameter("cod_doc", typeof(string));
    
            var raz_socParameter = raz_soc != null ?
                new ObjectParameter("raz_soc", raz_soc) :
                new ObjectParameter("raz_soc", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var tel_movParameter = tel_mov != null ?
                new ObjectParameter("tel_mov", tel_mov) :
                new ObjectParameter("tel_mov", typeof(string));
    
            var tel_fijoParameter = tel_fijo != null ?
                new ObjectParameter("tel_fijo", tel_fijo) :
                new ObjectParameter("tel_fijo", typeof(string));
    
            var num_rucParameter = num_ruc != null ?
                new ObjectParameter("num_ruc", num_ruc) :
                new ObjectParameter("num_ruc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCliente", cod_docParameter, raz_socParameter, dirParameter, emailParameter, tel_movParameter, tel_fijoParameter, num_rucParameter);
        }
    
        public virtual int ActualizarProductos(string cod_tipo, string des_pro, Nullable<int> cod_mon, Nullable<decimal> val, Nullable<decimal> pre, Nullable<int> cod_pro)
        {
            var cod_tipoParameter = cod_tipo != null ?
                new ObjectParameter("cod_tipo", cod_tipo) :
                new ObjectParameter("cod_tipo", typeof(string));
    
            var des_proParameter = des_pro != null ?
                new ObjectParameter("des_pro", des_pro) :
                new ObjectParameter("des_pro", typeof(string));
    
            var cod_monParameter = cod_mon.HasValue ?
                new ObjectParameter("cod_mon", cod_mon) :
                new ObjectParameter("cod_mon", typeof(int));
    
            var valParameter = val.HasValue ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(decimal));
    
            var preParameter = pre.HasValue ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(decimal));
    
            var cod_proParameter = cod_pro.HasValue ?
                new ObjectParameter("cod_pro", cod_pro) :
                new ObjectParameter("cod_pro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProductos", cod_tipoParameter, des_proParameter, cod_monParameter, valParameter, preParameter, cod_proParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarBoleta(string num_ruc, string razon_social, string cod_doc, string num_serie, string num_cor, Nullable<System.DateTime> fec_em, Nullable<int> cod_op, string cod_mon, Nullable<decimal> tipo, Nullable<System.DateTime> fec_ven, Nullable<int> estado, Nullable<decimal> exo, Nullable<decimal> inf, Nullable<decimal> gra, Nullable<decimal> igv, Nullable<decimal> gratuita, Nullable<decimal> tot_bol)
        {
            var num_rucParameter = num_ruc != null ?
                new ObjectParameter("num_ruc", num_ruc) :
                new ObjectParameter("num_ruc", typeof(string));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var cod_docParameter = cod_doc != null ?
                new ObjectParameter("cod_doc", cod_doc) :
                new ObjectParameter("cod_doc", typeof(string));
    
            var num_serieParameter = num_serie != null ?
                new ObjectParameter("num_serie", num_serie) :
                new ObjectParameter("num_serie", typeof(string));
    
            var num_corParameter = num_cor != null ?
                new ObjectParameter("num_cor", num_cor) :
                new ObjectParameter("num_cor", typeof(string));
    
            var fec_emParameter = fec_em.HasValue ?
                new ObjectParameter("fec_em", fec_em) :
                new ObjectParameter("fec_em", typeof(System.DateTime));
    
            var cod_opParameter = cod_op.HasValue ?
                new ObjectParameter("cod_op", cod_op) :
                new ObjectParameter("cod_op", typeof(int));
    
            var cod_monParameter = cod_mon != null ?
                new ObjectParameter("cod_mon", cod_mon) :
                new ObjectParameter("cod_mon", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(decimal));
    
            var fec_venParameter = fec_ven.HasValue ?
                new ObjectParameter("fec_ven", fec_ven) :
                new ObjectParameter("fec_ven", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var exoParameter = exo.HasValue ?
                new ObjectParameter("exo", exo) :
                new ObjectParameter("exo", typeof(decimal));
    
            var infParameter = inf.HasValue ?
                new ObjectParameter("inf", inf) :
                new ObjectParameter("inf", typeof(decimal));
    
            var graParameter = gra.HasValue ?
                new ObjectParameter("gra", gra) :
                new ObjectParameter("gra", typeof(decimal));
    
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var gratuitaParameter = gratuita.HasValue ?
                new ObjectParameter("gratuita", gratuita) :
                new ObjectParameter("gratuita", typeof(decimal));
    
            var tot_bolParameter = tot_bol.HasValue ?
                new ObjectParameter("tot_bol", tot_bol) :
                new ObjectParameter("tot_bol", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarBoleta", num_rucParameter, razon_socialParameter, cod_docParameter, num_serieParameter, num_corParameter, fec_emParameter, cod_opParameter, cod_monParameter, tipoParameter, fec_venParameter, estadoParameter, exoParameter, infParameter, graParameter, igvParameter, gratuitaParameter, tot_bolParameter);
        }
    
        public virtual int InsertarDetalle(Nullable<int> num_fac, Nullable<int> cod_pro, Nullable<int> cantidad, Nullable<int> tipo_igv, Nullable<decimal> valor, Nullable<decimal> subtotal, Nullable<decimal> tot_pro)
        {
            var num_facParameter = num_fac.HasValue ?
                new ObjectParameter("num_fac", num_fac) :
                new ObjectParameter("num_fac", typeof(int));
    
            var cod_proParameter = cod_pro.HasValue ?
                new ObjectParameter("cod_pro", cod_pro) :
                new ObjectParameter("cod_pro", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var tipo_igvParameter = tipo_igv.HasValue ?
                new ObjectParameter("tipo_igv", tipo_igv) :
                new ObjectParameter("tipo_igv", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var tot_proParameter = tot_pro.HasValue ?
                new ObjectParameter("tot_pro", tot_pro) :
                new ObjectParameter("tot_pro", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarDetalle", num_facParameter, cod_proParameter, cantidadParameter, tipo_igvParameter, valorParameter, subtotalParameter, tot_proParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarFactura(string num_ruc, string razon_social, string cod_doc, string num_serie, string num_cor, Nullable<System.DateTime> fec_em, Nullable<int> cod_op, string cod_mon, Nullable<decimal> tipo, Nullable<System.DateTime> fec_ven, Nullable<int> estado, Nullable<decimal> exo, Nullable<decimal> inf, Nullable<decimal> gra, Nullable<decimal> igv, Nullable<decimal> gratuita, Nullable<decimal> tot_bol)
        {
            var num_rucParameter = num_ruc != null ?
                new ObjectParameter("num_ruc", num_ruc) :
                new ObjectParameter("num_ruc", typeof(string));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var cod_docParameter = cod_doc != null ?
                new ObjectParameter("cod_doc", cod_doc) :
                new ObjectParameter("cod_doc", typeof(string));
    
            var num_serieParameter = num_serie != null ?
                new ObjectParameter("num_serie", num_serie) :
                new ObjectParameter("num_serie", typeof(string));
    
            var num_corParameter = num_cor != null ?
                new ObjectParameter("num_cor", num_cor) :
                new ObjectParameter("num_cor", typeof(string));
    
            var fec_emParameter = fec_em.HasValue ?
                new ObjectParameter("fec_em", fec_em) :
                new ObjectParameter("fec_em", typeof(System.DateTime));
    
            var cod_opParameter = cod_op.HasValue ?
                new ObjectParameter("cod_op", cod_op) :
                new ObjectParameter("cod_op", typeof(int));
    
            var cod_monParameter = cod_mon != null ?
                new ObjectParameter("cod_mon", cod_mon) :
                new ObjectParameter("cod_mon", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(decimal));
    
            var fec_venParameter = fec_ven.HasValue ?
                new ObjectParameter("fec_ven", fec_ven) :
                new ObjectParameter("fec_ven", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var exoParameter = exo.HasValue ?
                new ObjectParameter("exo", exo) :
                new ObjectParameter("exo", typeof(decimal));
    
            var infParameter = inf.HasValue ?
                new ObjectParameter("inf", inf) :
                new ObjectParameter("inf", typeof(decimal));
    
            var graParameter = gra.HasValue ?
                new ObjectParameter("gra", gra) :
                new ObjectParameter("gra", typeof(decimal));
    
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var gratuitaParameter = gratuita.HasValue ?
                new ObjectParameter("gratuita", gratuita) :
                new ObjectParameter("gratuita", typeof(decimal));
    
            var tot_bolParameter = tot_bol.HasValue ?
                new ObjectParameter("tot_bol", tot_bol) :
                new ObjectParameter("tot_bol", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarFactura", num_rucParameter, razon_socialParameter, cod_docParameter, num_serieParameter, num_corParameter, fec_emParameter, cod_opParameter, cod_monParameter, tipoParameter, fec_venParameter, estadoParameter, exoParameter, infParameter, graParameter, igvParameter, gratuitaParameter, tot_bolParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarNotaCredito(string num_ruc, string razon_social, string cod_doc, string num_serie, string num_cor, Nullable<System.DateTime> fec_em, Nullable<int> cod_op, string cod_mon, Nullable<decimal> tipo, Nullable<System.DateTime> fec_ven, Nullable<int> estado, Nullable<decimal> exo, Nullable<decimal> inf, Nullable<decimal> gra, Nullable<decimal> igv, Nullable<decimal> gratuita, Nullable<decimal> tot_bol, string codcre)
        {
            var num_rucParameter = num_ruc != null ?
                new ObjectParameter("num_ruc", num_ruc) :
                new ObjectParameter("num_ruc", typeof(string));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var cod_docParameter = cod_doc != null ?
                new ObjectParameter("cod_doc", cod_doc) :
                new ObjectParameter("cod_doc", typeof(string));
    
            var num_serieParameter = num_serie != null ?
                new ObjectParameter("num_serie", num_serie) :
                new ObjectParameter("num_serie", typeof(string));
    
            var num_corParameter = num_cor != null ?
                new ObjectParameter("num_cor", num_cor) :
                new ObjectParameter("num_cor", typeof(string));
    
            var fec_emParameter = fec_em.HasValue ?
                new ObjectParameter("fec_em", fec_em) :
                new ObjectParameter("fec_em", typeof(System.DateTime));
    
            var cod_opParameter = cod_op.HasValue ?
                new ObjectParameter("cod_op", cod_op) :
                new ObjectParameter("cod_op", typeof(int));
    
            var cod_monParameter = cod_mon != null ?
                new ObjectParameter("cod_mon", cod_mon) :
                new ObjectParameter("cod_mon", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(decimal));
    
            var fec_venParameter = fec_ven.HasValue ?
                new ObjectParameter("fec_ven", fec_ven) :
                new ObjectParameter("fec_ven", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var exoParameter = exo.HasValue ?
                new ObjectParameter("exo", exo) :
                new ObjectParameter("exo", typeof(decimal));
    
            var infParameter = inf.HasValue ?
                new ObjectParameter("inf", inf) :
                new ObjectParameter("inf", typeof(decimal));
    
            var graParameter = gra.HasValue ?
                new ObjectParameter("gra", gra) :
                new ObjectParameter("gra", typeof(decimal));
    
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var gratuitaParameter = gratuita.HasValue ?
                new ObjectParameter("gratuita", gratuita) :
                new ObjectParameter("gratuita", typeof(decimal));
    
            var tot_bolParameter = tot_bol.HasValue ?
                new ObjectParameter("tot_bol", tot_bol) :
                new ObjectParameter("tot_bol", typeof(decimal));
    
            var codcreParameter = codcre != null ?
                new ObjectParameter("codcre", codcre) :
                new ObjectParameter("codcre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarNotaCredito", num_rucParameter, razon_socialParameter, cod_docParameter, num_serieParameter, num_corParameter, fec_emParameter, cod_opParameter, cod_monParameter, tipoParameter, fec_venParameter, estadoParameter, exoParameter, infParameter, graParameter, igvParameter, gratuitaParameter, tot_bolParameter, codcreParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarNotaDebito(string num_ruc, string razon_social, string cod_doc, string num_serie, string num_cor, Nullable<System.DateTime> fec_em, Nullable<int> cod_op, string cod_mon, Nullable<decimal> tipo, Nullable<System.DateTime> fec_ven, Nullable<int> estado, Nullable<decimal> exo, Nullable<decimal> inf, Nullable<decimal> gra, Nullable<decimal> igv, Nullable<decimal> gratuita, Nullable<decimal> tot_bol, string codde)
        {
            var num_rucParameter = num_ruc != null ?
                new ObjectParameter("num_ruc", num_ruc) :
                new ObjectParameter("num_ruc", typeof(string));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var cod_docParameter = cod_doc != null ?
                new ObjectParameter("cod_doc", cod_doc) :
                new ObjectParameter("cod_doc", typeof(string));
    
            var num_serieParameter = num_serie != null ?
                new ObjectParameter("num_serie", num_serie) :
                new ObjectParameter("num_serie", typeof(string));
    
            var num_corParameter = num_cor != null ?
                new ObjectParameter("num_cor", num_cor) :
                new ObjectParameter("num_cor", typeof(string));
    
            var fec_emParameter = fec_em.HasValue ?
                new ObjectParameter("fec_em", fec_em) :
                new ObjectParameter("fec_em", typeof(System.DateTime));
    
            var cod_opParameter = cod_op.HasValue ?
                new ObjectParameter("cod_op", cod_op) :
                new ObjectParameter("cod_op", typeof(int));
    
            var cod_monParameter = cod_mon != null ?
                new ObjectParameter("cod_mon", cod_mon) :
                new ObjectParameter("cod_mon", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(decimal));
    
            var fec_venParameter = fec_ven.HasValue ?
                new ObjectParameter("fec_ven", fec_ven) :
                new ObjectParameter("fec_ven", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var exoParameter = exo.HasValue ?
                new ObjectParameter("exo", exo) :
                new ObjectParameter("exo", typeof(decimal));
    
            var infParameter = inf.HasValue ?
                new ObjectParameter("inf", inf) :
                new ObjectParameter("inf", typeof(decimal));
    
            var graParameter = gra.HasValue ?
                new ObjectParameter("gra", gra) :
                new ObjectParameter("gra", typeof(decimal));
    
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var gratuitaParameter = gratuita.HasValue ?
                new ObjectParameter("gratuita", gratuita) :
                new ObjectParameter("gratuita", typeof(decimal));
    
            var tot_bolParameter = tot_bol.HasValue ?
                new ObjectParameter("tot_bol", tot_bol) :
                new ObjectParameter("tot_bol", typeof(decimal));
    
            var coddeParameter = codde != null ?
                new ObjectParameter("codde", codde) :
                new ObjectParameter("codde", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarNotaDebito", num_rucParameter, razon_socialParameter, cod_docParameter, num_serieParameter, num_corParameter, fec_emParameter, cod_opParameter, cod_monParameter, tipoParameter, fec_venParameter, estadoParameter, exoParameter, infParameter, graParameter, igvParameter, gratuitaParameter, tot_bolParameter, coddeParameter);
        }
    
        public virtual ObjectResult<listarReporte_Result> listarReporte(Nullable<int> num_fac)
        {
            var num_facParameter = num_fac.HasValue ?
                new ObjectParameter("num_fac", num_fac) :
                new ObjectParameter("num_fac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarReporte_Result>("listarReporte", num_facParameter);
        }
    }
}
